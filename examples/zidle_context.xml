
<zidle_context>
  <game_rules>
    - One NFT per wallet required
    - Balance mining between Stone and Wood
    - Token IDs are u256, but use CHECK_NFT TOKEN_ID_LOW for all actions
    - Each resource type has different levels with specific requirements and rewards
  </game_rules>

  <game_mechanics>
    <level_system>
      <constants>
        <max_level>99</max_level>
      </constants>
      <xp_table>
        <level value="0" required_xp="0" />
        <level value="1" required_xp="110" />
        <level value="2" required_xp="140" />
        <level value="3" required_xp="190" />
        <level value="4" required_xp="260" />
        <level value="5" required_xp="350" />
        <level value="6" required_xp="460" />
        <level value="7" required_xp="590" />
        <level value="8" required_xp="740" />
        <level value="9" required_xp="910" />
        <level value="10" required_xp="1100" />
        <level value="11" required_xp="1310" />
        <level value="12" required_xp="1540" />
        <level value="13" required_xp="1790" />
        <level value="14" required_xp="2060" />
        <level value="15" required_xp="2350" />
        <level value="16" required_xp="2660" />
        <level value="17" required_xp="2990" />
        <level value="18" required_xp="3340" />
        <level value="19" required_xp="3710" />
        <level value="20" required_xp="4100" />
        <level value="30" required_xp="9100" />
        <level value="40" required_xp="16100" />
        <level value="50" required_xp="25100" />
        <level value="60" required_xp="36100" />
        <level value="70" required_xp="49100" />
        <level value="80" required_xp="64100" />
        <level value="90" required_xp="81100" />
      </xp_table>
      <helper>
        <level_determination>
          To find current level, look up the highest level where current_xp >= required_xp
        </level_determination>
        <next_level>
          To find XP needed for next level, subtract current_xp from next level's required_xp
        </next_level>
      </helper>
    </level_system>

    <resource_types>
      <wood_types rcs_type="1">
        <wood id="1" name="Pine" min_level="0">
          <base_time>2000</base_time>
          <base_xp>5</base_xp>
          <unit_price>1</unit_price>
        </wood>
        <wood id="2" name="Oak" min_level="15">
          <base_time>3000</base_time>
          <base_xp>10</base_xp>
          <unit_price>2</unit_price>
        </wood>
        <wood id="3" name="Maple" min_level="30">
          <base_time>4000</base_time>
          <base_xp>15</base_xp>
          <unit_price>3</unit_price>
        </wood>
        <wood id="4" name="Walnut" min_level="45">
          <base_time>5000</base_time>
          <base_xp>20</base_xp>
          <unit_price>4</unit_price>
        </wood>
        <wood id="5" name="Mahogany" min_level="60">
          <base_time>6000</base_time>
          <base_xp>25</base_xp>
          <unit_price>5</unit_price>
        </wood>
        <wood id="6" name="Ebony" min_level="75">
          <base_time>10000</base_time>
          <base_xp>30</base_xp>
          <unit_price>6</unit_price>
        </wood>
        <wood id="7" name="Eldertree" min_level="90">
          <base_time>15000</base_time>
          <base_xp>50</base_xp>
          <unit_price>10</unit_price>
        </wood>
      </wood_types>

      <food_types rcs_type="2">
        <food id="1" name="Berries" min_level="0">
          <base_time>2000</base_time>
          <base_xp>5</base_xp>
          <unit_price>1</unit_price>
        </food>
        <food id="2" name="Wheat" min_level="15">
          <base_time>3000</base_time>
          <base_xp>10</base_xp>
          <unit_price>2</unit_price>
        </food>
        <food id="3" name="Vegetables" min_level="30">
          <base_time>4000</base_time>
          <base_xp>15</base_xp>
          <unit_price>3</unit_price>
        </food>
        <food id="4" name="Fruits" min_level="45">
          <base_time>5000</base_time>
          <base_xp>20</base_xp>
          <unit_price>4</unit_price>
        </food>
        <food id="5" name="Herbs" min_level="60">
          <base_time>6000</base_time>
          <base_xp>25</base_xp>
          <unit_price>5</unit_price>
        </food>
        <food id="6" name="Mushrooms" min_level="75">
          <base_time>10000</base_time>
          <base_xp>30</base_xp>
          <unit_price>6</unit_price>
        </food>
        <food id="7" name="Ambrosia" min_level="90">
          <base_time>15000</base_time>
          <base_xp>50</base_xp>
          <unit_price>10</unit_price>
        </food>
      </food_types>

      <mineral_types rcs_type="3">
        <mineral id="1" name="Coal" min_level="0">
          <base_time>2000</base_time>
          <base_xp>5</base_xp>
          <unit_price>1</unit_price>
        </mineral>
        <mineral id="2" name="Copper" min_level="15">
          <base_time>3000</base_time>
          <base_xp>10</base_xp>
          <unit_price>2</unit_price>
        </mineral>
        <mineral id="3" name="Iron" min_level="30">
          <base_time>4000</base_time>
          <base_xp>15</base_xp>
          <unit_price>3</unit_price>
        </mineral>
        <mineral id="4" name="Silver" min_level="45">
          <base_time>5000</base_time>
          <base_xp>20</base_xp>
          <unit_price>4</unit_price>
        </mineral>
        <mineral id="5" name="Gold" min_level="60">
          <base_time>6000</base_time>
          <base_xp>25</base_xp>
          <unit_price>5</unit_price>
        </mineral>
        <mineral id="6" name="Mithril" min_level="75">
          <base_time>10000</base_time>
          <base_xp>30</base_xp>
          <unit_price>6</unit_price>
        </mineral>
        <mineral id="7" name="Adamantium" min_level="90">
          <base_time>15000</base_time>
          <base_xp>50</base_xp>
          <unit_price>10</unit_price>
        </mineral>
      </mineral_types>
    </resource_types>

    <gathering_mechanics>
      <time_reduction>
      <formula>final_time = base_time - (base_time * (player_level * 0.5%) / 100)</formula>
      <properties>
        - 0.5% reduction per player level
        - Maximum 49.5% reduction at level 99
      </properties>
      </time_reduction>
    </gathering_mechanics>

  </game_mechanics>

  <game_flow>
    <action_dependencies>
      - TOKEN_ID required before: CHECK_XP, CHECK_MINING, MINE_RCS, HARVEST_RCS
      - XP_DATA required before: MINE_RCS (for tier selection)
      - MINING_STATUS required before: HARVEST_RCS, MINE_RCS
    </action_dependencies>

    <action_flow>
      <phase name="initialization">
        1. CHECK_NFT:
          - Success: Store TOKEN_ID_LOW, proceed to phase 2
          - Not found: Execute MINT_NFT, then repeat CHECK_NFT
      </phase>

      <phase name="status_check" requires="TOKEN_ID_LOW">
        1. CHECK_XP: Get current XP and level data
        2. CHECK_MINING: Get current mining status
        3. Based on results:
          - If mining: Queue HARVEST_RCS
          - If idle: Proceed to resource selection
      </phase>

      <phase name="resource_selection" requires="TOKEN_ID_LOW,XP_DATA,MINING_STATUS">
        1. Calculate optimal resource tier based on:
          - Current level
          - Available tiers
          - XP efficiency
        2. Queue MINE_RCS with selected tier
      </phase>
    </action_flow>

    <execution_rules>
      - Generate only actions where all required data is available
      - Wait for each action's response before planning next steps
      - Validate data requirements before queueing any action
      - Re-evaluate plan after each action completion
    </execution_rules>
  </game_flow>
</zidle_context>