<?xml version="1.0" encoding="UTF-8"?>
<zidle_context>
  <game_rules>
    - One NFT per wallet required
    - Balance mining between Stone and Wood
    - Token IDs are u256, but use CHECK_NFT token_id_low for all actions
    - Each resource type has different levels with specific requirements and rewards
  </game_rules>

  <game_mechanics>
    <level_system>
      <constants>
      - Max Level: 99
      - Base XP: 100
      - XP Curve: BASE_XP + 10 * level * level
      </constants>
      <level_thresholds>
        <threshold level="1">110 XP</threshold>
        <threshold level="2">140 XP</threshold>
        <threshold level="3">190 XP</threshold>
        <threshold level="4">260 XP</threshold>
        <threshold level="10">1100 XP</threshold>
        <threshold level="50">25100 XP</threshold>
        <threshold level="99">98110 XP</threshold>
      </level_thresholds>
    </level_system>

    <resource_types>
      <wood_types rcs_type="1">
        <wood id="1" name="Pine" min_level="0">
          <base_time>2000</base_time>
          <base_xp>5</base_xp>
          <unit_price>1</unit_price>
        </wood>
        <wood id="2" name="Oak" min_level="15">
          <base_time>3000</base_time>
          <base_xp>10</base_xp>
          <unit_price>2</unit_price>
        </wood>
        <wood id="3" name="Maple" min_level="30">
          <base_time>4000</base_time>
          <base_xp>15</base_xp>
          <unit_price>3</unit_price>
        </wood>
        <wood id="4" name="Walnut" min_level="45">
          <base_time>5000</base_time>
          <base_xp>20</base_xp>
          <unit_price>4</unit_price>
        </wood>
        <wood id="5" name="Mahogany" min_level="60">
          <base_time>6000</base_time>
          <base_xp>25</base_xp>
          <unit_price>5</unit_price>
        </wood>
        <wood id="6" name="Ebony" min_level="75">
          <base_time>10000</base_time>
          <base_xp>30</base_xp>
          <unit_price>6</unit_price>
        </wood>
        <wood id="7" name="Eldertree" min_level="90">
          <base_time>15000</base_time>
          <base_xp>50</base_xp>
          <unit_price>10</unit_price>
        </wood>
      </wood_types>

      <food_types rcs_type="2">
        <food id="1" name="Berries" min_level="0">
          <base_time>2000</base_time>
          <base_xp>5</base_xp>
          <unit_price>1</unit_price>
        </food>
        <food id="2" name="Wheat" min_level="15">
          <base_time>3000</base_time>
          <base_xp>10</base_xp>
          <unit_price>2</unit_price>
        </food>
        <food id="3" name="Vegetables" min_level="30">
          <base_time>4000</base_time>
          <base_xp>15</base_xp>
          <unit_price>3</unit_price>
        </food>
        <food id="4" name="Fruits" min_level="45">
          <base_time>5000</base_time>
          <base_xp>20</base_xp>
          <unit_price>4</unit_price>
        </food>
        <food id="5" name="Herbs" min_level="60">
          <base_time>6000</base_time>
          <base_xp>25</base_xp>
          <unit_price>5</unit_price>
        </food>
        <food id="6" name="Mushrooms" min_level="75">
          <base_time>10000</base_time>
          <base_xp>30</base_xp>
          <unit_price>6</unit_price>
        </food>
        <food id="7" name="Ambrosia" min_level="90">
          <base_time>15000</base_time>
          <base_xp>50</base_xp>
          <unit_price>10</unit_price>
        </food>
      </food_types>

      <mineral_types rcs_type="3">
        <mineral id="1" name="Coal" min_level="0">
          <base_time>2000</base_time>
          <base_xp>5</base_xp>
          <unit_price>1</unit_price>
        </mineral>
        <mineral id="2" name="Copper" min_level="15">
          <base_time>3000</base_time>
          <base_xp>10</base_xp>
          <unit_price>2</unit_price>
        </mineral>
        <mineral id="3" name="Iron" min_level="30">
          <base_time>4000</base_time>
          <base_xp>15</base_xp>
          <unit_price>3</unit_price>
        </mineral>
        <mineral id="4" name="Silver" min_level="45">
          <base_time>5000</base_time>
          <base_xp>20</base_xp>
          <unit_price>4</unit_price>
        </mineral>
        <mineral id="5" name="Gold" min_level="60">
          <base_time>6000</base_time>
          <base_xp>25</base_xp>
          <unit_price>5</unit_price>
        </mineral>
        <mineral id="6" name="Mithril" min_level="75">
          <base_time>10000</base_time>
          <base_xp>30</base_xp>
          <unit_price>6</unit_price>
        </mineral>
        <mineral id="7" name="Adamantium" min_level="90">
          <base_time>15000</base_time>
          <base_xp>50</base_xp>
          <unit_price>10</unit_price>
        </mineral>
      </mineral_types>
    </resource_types>

    <gathering_mechanics>
      <time_reduction>
      <formula>final_time = base_time - (base_time * (player_level * 0.5%) / 100)</formula>
      <properties>
        - 0.5% reduction per player level
        - Maximum 49.5% reduction at level 99
      </properties>
      </time_reduction>
    </gathering_mechanics>

  </game_mechanics>

  <available_actions>
    <action name="CHECK_NFT">
      <purpose>Check if wallet has NFT</purpose>
      <input>
        <param name="address">WALLET_ADDRESS</param>
      </input>
      <returns>u256 [token_id_low, token_id_high]</returns>
      <note>Use token_id_low for all other actions</note>
    </action>

    <action name="MINT_NFT">
      <purpose>Create new character NFT</purpose>
      <input>
        <param name="address">WALLET_ADDRESS</param>
        <param name="name">string</param>
      </input>
      <returns>success boolean</returns>
    </action>

    <action name="MINE_RCS">
      <purpose>Start mining a resource</purpose>
      <input>
        <param name="token_id">token_id_low (u128 from CHECK_NFT[0])</param>
        <param name="rcs_type">
          1: Wood
          2: Food
          3: Mineral
        </param>
        <param name="rcs_sub_type">
          Resource tier ID from resource_types:
          - For rcs_type=1: use wood.id (1=Pine, 2=Oak, etc.)
          - For rcs_type=2: use food.id (1=Berries, 2=Wheat, etc.)
          - For rcs_type=3: use mineral.id (1=Coal, 2=Copper, etc.)
        </param>
      </input>
    </action>

    <action name="HARVEST_RCS">
      <purpose>Harvest currently mined resource</purpose>
      <input>
        <param name="token_id">token_id_low (u128 from CHECK_NFT[0])</param>
        <param name="rcs_type">Same as mining sub_type</param>
      </input>
    </action>
  </available_actions>

  <available_queries>
    <query name="CHECK_MINING">
      <preriquisites>CHECK_NFT action have to have been done before</preriquisites>
      <purpose>Check if NFT is currently mining any resource</purpose>
      <params>
        <param name="token_id">token_id_low from CHECK_NFT[0]</param>
      </params>
      <graphql>
        query ZidleMinerModels {
          zidleMinerModels(where: { token_id: token_id_low, timestampGT: "0" }) {
            edges {
              node {
                token_id
                resource_type
                xp
              }
            }
          totalCount
          }
        }
      </graphql>
      <result_interpretation>
        <case condition="totalCount == 0">
          Not currently mining any resource
        </case>
        <case condition="totalCount > 0">
          Currently mining:
          - resource_type: identifies resource category (1: Wood, 2: Food, 3: Mineral)
        </case>
      </result_interpretation>
    </query>

    <query name="CHECK_XP">
      <purpose>Get current XP levels for each resource type</purpose>
      <params>
        <param name="token_id">token_id_low from CHECK_NFT[0]</param>
      </params>
      <graphql>
        query ZidleXPModels {
          zidleMinerModels(where: { token_id: TOKEN_ID_LOW }) {
            totalCount
            edges {
              node {
                resource_type
                xp
              }
            }
          }
        }
      </graphql>
      <result_interpretation>
        <case condition="totalCount == 0">
          New character: all resource types start at 0 XP
        </case>
        <case condition="totalCount > 0">
          Each edge in edges array represents a resource type:
          - xp: current experience points for that resource type (1: Wood, 2: Food, 3: Mineral)
        </case>
      </result_interpretation>
    </query>
  </available_queries>

  <game_flow>
    <initialization>
      <step>1. **Always start with CHECK_NFT.** Verify NFT existence before any action.</step>
      <step>2. If no NFT is found:
        - Mint new NFT using MINT_NFT.
        - Verify the minting success with CHECK_NFT and then proceed.</step>
      <step>3. Check current mining status (CHECK_MINING):
        - If mining is in progress, harvest resources (HARVEST_RCS).
        - If not, proceed to the main loop.</step>
      <step>4. Query current XP to determine the starting point.</step>
      <step>5. Proceed to the main loop.</step>
    </initialization>
    
    <main_loop>
      <step>1. Check current XP levels and calculate:
        - Current level from XP.
        - XP needed for the next level.
        - Available resource tiers.</step>
      <step>2. Check mining status (CHECK_MINING):
        - If mining: Harvest current resource (HARVEST_RCS).
        - If not: Select optimal resource based on the level and start mining (MINE_RCS).</step>
      <step>3. Wait for gathering duration based on base time and level reduction bonus.</step>
      <step>4. Return to step 1 of the main loop.</step>
    </main_loop>
    
    <optimization_notes>
      - Keep mining active at all times.
      - Always choose the highest tier resource available based on your level.
      - Factor in gathering time reduction from level bonuses.
      - Balance between XP gains and gathering time.
    </optimization_notes>
  </game_flow>

  <error_handling>
    <guidelines>
      - Verify NFT exists before any action
      - Implement retries for failed connections
      - Handle mining cooldowns
      - Wait 5 seconds before retrying failed actions
      - Maximum 3 retry attempts per action
      - Verify player meets level requirements before selecting resource
    </guidelines>
  </error_handling>
</zidle_context>